cmake_minimum_required(VERSION 3.8)
project(predictor)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(my_interfaces REQUIRED)
find_package(Eigen3 REQUIRED)
find_package(OpenCV REQUIRED)
find_package(Ceres REQUIRED)
if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()
include_directories(${Eigen3_INCLUDE_DIR})
include_directories(${CERES_INCLUDE_DIRS})

add_executable(predictor src/predictor.cpp)

target_include_directories(predictor PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:include>)

target_compile_features(predictor PUBLIC c_std_99 cxx_std_17)
ament_target_dependencies(predictor rclcpp my_interfaces OpenCV)
target_link_libraries(predictor   ${Eigen3_LIBRARIES} ${CERES_LIBRARIES})
install(TARGETS
        predictor
        DESTINATION lib/${PROJECT_NAME})

ament_package()
